name: data
on:
  schedule:
    - cron: "*/5 * * * *"
  workflow_dispatch: {}
  push:
    paths:
      - .github/workflows/flat.yml
jobs:
  scheduled:
    runs-on: ubuntu-latest
    steps:
      - name: Setup deno
        uses: denoland/setup-deno@main
        with:
          deno-version: v1.10.x
      - name: Check out repo
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Install dependencies
        run: |
          deno install --allow-read --allow-write --allow-net --unstable -f -n flat https://deno.land/x/flat/mod.ts
          python -m pip install --upgrade pip
          pip install poetry
          poetry config virtualenvs.create false
          poetry install
      - name: List directory structure
        run: ls -la

      - name: Setup Git LFS
        run: |
          git lfs install
          git lfs track "*.json"
          git add .gitattributes

      - name: Run flat
        continue-on-error: true
        run: |
          if ! python texas_result_scraper/main.py; then
            echo "Script failed, skipping commit"
            exit 0
          fi
          git config --global user.email "dev@abstractdata.io"
          git config --global user.name "John R. Eakin"
          git add -A
          timestamp=$(date -u '+%Y-%m-%d %H:%M:%S UTC')
          git fetch
          git lfs track texas_result_scraper/data/*.json
          git add texas_result_scraper/data/*.json
          git commit -m "Data updated at ${timestamp}"
          git push
            
#      - name: Check for changes
#        id: check_changes
#        if: steps.run_script.outcome == 'success'
#        run: |
#              git diff --quiet || echo "has_changes=true" >> $GITHUB_OUTPUT
              
#      - name: Commit and push if changed
##        if: steps.check_changes.outputs.has_changes == 'true'
#        run: |
#              git config --global user.email "dev@abstractdata.io"
#              git config --global user.name "John R. Eakin"
#              timestamp=$(date -u '+%Y-%m-%d %H:%M:%S UTC')
#              git lfs track "texas_result_scraper/data/*.json"
#              git add texas_result_scraper/data/*.json
#              git commit -m "Data updated at ${timestamp}"
#              git push || exit 0